"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

numbers = {}
results = []
def even_fibonacci(limit):
    result = 0
    for i in range(1, limit+1):
        result = fib(i)
        if result > limit:
            break
        if result % 2 == 0:
            results.append(result)
    return sum(results)

def fib(n):
    if n == 0: return 0
    if n == 1: return 1
    if n not in numbers.keys():
        result = fib(n-1) + fib(n-2)
        numbers[n] = result
    else:
        result = numbers[n]
    return result

if __name__ == "__main__":
    print even_fibonacci(4000000)
